{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace": {
            "type": "String"
        }
    },
    "resources": [
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/09ae4a64-cbdb-4242-af2c-c6d02bc24510')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/09ae4a64-cbdb-4242-af2c-c6d02bc24510')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "WAF events",
                "description": "",
                "severity": "High",
                "enabled": true,
                "query": "AzureDiagnostics\r\n| where \"All\" == \"All\" or Resource in ('All')\r\n| where ResourceType == \"APPLICATIONGATEWAYS\"\r\n| where OperationName == \"ApplicationGatewayFirewall\"\r\n| where Message == \"SQL Injection Attack\" ",
                "queryFrequency": "PT5H",
                "queryPeriod": "PT5H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "tactics": [
                    "DefenseEvasion"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": null
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/760404e4-0967-4d80-86a2-00f119f1341b')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/760404e4-0967-4d80-86a2-00f119f1341b')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - Activation or Deactivation of ICF Service",
                "description": "Identifies activation or deactivation of ICF Services.\nSource Action: Activate or deactivate a service using SICF.\n*Data Sources: SAPcon - Table Data Log*",
                "severity": "High",
                "enabled": false,
                "query": "let ActivatedICF =\r\nABAPTableDataLog_CL\r\n| where TableName_s == \"ICFSERVLOC\"\r\n| lookup ABAPTableDataLog_CL on TimeGenerated, LogKey_s, DBLogID_s // Lookup for combining the data\r\n| where TableField_s == \"ICF_NAME\" // Service name\r\n| where TableField_s1 == \"ICFACTIVE\" // Active status\r\n| where OldValue_s == NewValue_s and OldValue_s != \"\" \r\n| where NewValue_s1 == \"X\" // Status is activated\r\n| project TimeGenerated, Service = NewValue_s, ICFServiceStatus = \"Activated\";\r\nABAPTableDataLog_CL\r\n| where TableName_s == \"ICFSERVLOC\"\r\n| lookup ABAPTableDataLog_CL on TimeGenerated, LogKey_s, DBLogID_s // Lookup for combining the data\r\n| where TableField_s == \"ICF_NAME\" // Service name\r\n| where TableField_s1 == \"ICFACTIVE\" // Active status\r\n| where OldValue_s1 == \"X\" // Was activated\r\n| where NewValue_s1 == \"\" // Not activated now\r\n| where OldValue_s == NewValue_s and OldValue_s != \"\"\r\n| project TimeGenerated, Service = NewValue_s, ICFServiceStatus = \"Deactivated\"\r\n| union ActivatedICF\r\n",
                "queryFrequency": "PT2H",
                "queryPeriod": "PT2H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "CommandAndControl",
                    "LateralMovement",
                    "Persistence"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": null,
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": null,
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": null
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/fdc17a3c-3178-45fd-8344-826b148dc6b4')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/fdc17a3c-3178-45fd-8344-826b148dc6b4')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - Change in Sensitive privileged user",
                "description": "Identifies changes  of sensitive privileged users. \n\nSource Action: Change user details / authorizations using SU01.\n\nPriveleged users should be maintained in \"SAP - Privileged Users\" Watchlist\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "High",
                "enabled": true,
                "query": "// Audit Log Classes - User Master Changes\r\nlet AuditClasses = dynamic(['AU7', 'BUV', 'BUW', 'AU8', 'AU9', 'AUA', 'AUB', 'AUD', 'DUH', 'BU2']);\r\n// Get Relevant User from WatchList\r\nlet PrivelegedUsers = _GetWatchlist('SAP - Privileged Users');\r\nlet fixedUsers = datatable(User: string)\r\n    // Maintain these if WatchList is not available    \r\n    [\"SAP*\", \"DDIC\"]\r\n;\r\nlet SensProfiles = _GetWatchlist('SAP - Sensitive Profiles') | summarize  by Profile;\r\nlet SensRoles = _GetWatchlist('SAP - Sensitive Roles') | summarize  by Role;\r\n// Maintain these if System doesn't have CR's\r\nlet FixedUserMD = datatable(TimeGenerated : datetime, UserName_s : string, RoleMembership_s : string)[];\r\nlet ABAPUserMd = \r\nunion isfuzzy=true table(\"ABAPUserMD_CL\"), FixedUserMD;\r\n// Priveleged Users by sensitive role/profile based on user master data\r\nlet PrivUserdByMD = ABAPUserMd\r\n| extend Roles = parse_json(RoleMembership_s)[\"SapRole\"], Profiles = parse_json(RoleMembership_s)[\"SapProfile\"]\r\n| mv-expand Roles, Profiles\r\n| where Roles in (SensRoles) or Profiles in (SensProfiles)\r\n| summarize by User = UserName_s;\r\nlet UnitedPrivleged = union PrivelegedUsers, fixedUsers, PrivUserdByMD\r\n| summarize by User;\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| where Variable1_s in (UnitedPrivleged) // The user that we are making change in is a sensitive privileged user\r\n| project TimeGenerated, Instance_s,  SystemID_s, ClientID_s, User_s, MessageText_s, MessageID_s, Email_s,  TerminalIPv6_s, Host_s\r\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "PrivilegeEscalation",
                    "CredentialAccess"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": null,
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": {
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_Client": "ClientID_s",
                    "SAP_Instance": "Instance_s",
                    "SAP_User": "User_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/34cdebef-ece9-4b9f-aa7c-7f25c99a941a')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/34cdebef-ece9-4b9f-aa7c-7f25c99a941a')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - Client Configuration Change",
                "description": "Identifies changes for client configuration such as: Client role, Changes recording mode. \n\nSource Action:  Perofrm client configurations changes using SCC4 transaction code. \n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "High",
                "enabled": true,
                "query": "// Audit Log Classes - Client Change Configuration\r\nlet AuditClasses = dynamic(['EU2']); // Relevent message\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| project-rename  ClientID = Variable1_s \r\n| parse Variable2_s with Currency \"|\" ClientRole \"|\" RecordingChanges \"|\" CrossClientObjectChanges \"|\" ClientCopyProtectionLevel \"|\" ProtectionSAPUpgrade \"|\" CATTeCATT \"|\"  LockedforCopy // Parse every object before the | char \r\n| project TimeGenerated, Instance_s, SystemID_s, User_s, ClientID, \r\nCurrency,ClientRole,RecordingChanges,CrossClientObjectChanges,ClientCopyProtectionLevel,CATTeCATT,LockedforCopy,ProtectionSAPUpgrade,\r\nMessageText_s, Email_s, TerminalIPv6_s,  Host_s\r\n",
                "queryFrequency": "PT5H",
                "queryPeriod": "PT5H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "DefenseEvasion",
                    "Exfiltration",
                    "Persistence"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": null,
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": {
                    "SAP_User": "User_s",
                    "SAP_Client": "ClientID",
                    "SAP_Instance": "Instance_s",
                    "SAP_System_I_D": "SystemID_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/b7d89628-9688-480f-b1c1-e97873492cc9')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/b7d89628-9688-480f-b1c1-e97873492cc9')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - Data has Changed during Debugging Activity",
                "description": "Identifies changes for runtime data during a debugging activity.\nSource Action: Activate Debug (\"/h\"), Select a field for change and update it's value.\n\n**Recommended for Production only**\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "High",
                "enabled": true,
                "query": "let Role = 'Production';\r\nlet AuditClasses = dynamic(['CUL']); // Audit Log Classes - Debug Change\r\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\r\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\r\n// Get Relevant Systems from WatchList\r\nlet systemID = _GetWatchlist('SAP - Systems');\r\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"S4H\",\"Production\",\"ERP\",\r\n    \"XXX\",\"Sandbox\",\"BW\"]\r\n;\r\nlet UnitedSystem = \r\nunion systemID, fixedSID\r\n| summarize by SystemID, SystemRole, SystemUsage\r\n| where SystemRole == Role; // Recommended  is Production only\r\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| project-rename SystemID = SystemID_s\r\n| lookup kind = inner (UnitedSystem) on SystemID\r\n| project TimeGenerated,ClientID_s, Instance_s, User_s, MessageText_s, ABAPProgramName_s, TransactionCode_s, SystemID, SystemRole, SystemUsage, Email_s,TerminalIPv6_s, Host_s\r\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Execution",
                    "LateralMovement"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": null,
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": {
                    "SAP_Instance": "Instance_s",
                    "SAP_System_I_D": "SystemID",
                    "SAP_Client": "ClientID_s",
                    "SAP_User": "User_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/ee5b7206-ae84-4073-b21b-e7b01d8f6b70')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/ee5b7206-ae84-4073-b21b-e7b01d8f6b70')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - Deactivation of Security Audit Log",
                "description": "Identifies deactivation of Security Audit Log\n\nSource Action: Disable secruity Audit Log using SM19/RSAU_CONFIG.\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "High",
                "enabled": true,
                "query": "// Audit Log Classes - Audit Log Active Status Events\r\nlet AuditClasses = dynamic(['AUJ']);\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| where Variable1_s == '0' // Audit Active Status = 0\r\n| project \r\n// Details\r\nTimeGenerated, Instance_s ,SystemID_s, ClientID_s, User_s, MessageText_s, Email_s, TerminalIPv6_s, Host_s",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Exfiltration",
                    "DefenseEvasion",
                    "Persistence"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": null,
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": {
                    "SAP_User": "User_s",
                    "SAP_Client": "ClientID_s",
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_Instance": "Instance_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/eacd0fb0-1225-448c-950e-15243ddede88')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/eacd0fb0-1225-448c-950e-15243ddede88')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - Execution of a Sensitive ABAP Program",
                "description": "Identifies direct execution of a sensitive ABAP program. \n\nSource Action: Execute a program directly using SE38/SA38/SE80.\n\n**Recommended for Production only**\n\nABAP Programs should be maintained in watchlist \"SAP - Sensitive ABAP Programs\"\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "High",
                "enabled": true,
                "query": "// Define Variables\r\nlet Role = \"Production\";\r\nlet AuditClasses = dynamic(['AUW']); // Audit Log Classes - Report Started\r\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\r\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\r\n// Get Relevant Systems from WatchList\r\nlet systemID = _GetWatchlist('SAP - Systems');\r\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"S4H\",\"Production\",\"ERP\",\r\n    \"XXX\",\"Sandbox\",\"BW\"]\r\n; \r\n// Get Relevant ABAP Programs\r\nlet SensitiveABAPReports = _GetWatchlist('SAP - Sensitive ABAP Programs');\r\nlet fixedABAPReports = datatable(ABAPProgram:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"RSPFLDOC\"]\r\n; \r\nlet UnionAbap = \r\n    union SensitiveABAPReports, fixedABAPReports\r\n    | summarize by ABAPProgram;\r\nlet UnitedSystem =\r\nunion systemID, fixedSID\r\n| summarize by SystemID, SystemRole, SystemUsage\r\n| where SystemRole == Role; // Reccommended is Production only\r\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\r\n// Query logic\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| where ABAPProgramName_s in (UnionAbap)\r\n| project-rename SystemID = SystemID_s\r\n| lookup kind = inner (UnitedSystem) on SystemID\r\n| order by TimeGenerated asc\r\n| project TimeGenerated, Instance_s , SystemID, ClientID_s, User_s, ABAPProgramName_s, MessageText_s, TransactionCode_s, MessageID_s, Email_s, TerminalIPv6_s, Host_s",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Exfiltration",
                    "LateralMovement",
                    "Execution"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": null,
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": {
                    "SAP_System_I_D": "SystemID",
                    "SAP_Client": "ClientID_s",
                    "SAP_Instance": "Instance_s",
                    "SAP_User": "User_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/62b31f4d-8b7b-4528-8c6f-bff7a47e659a')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/62b31f4d-8b7b-4528-8c6f-bff7a47e659a')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - Execution of a Sensitive Transaction Code",
                "description": "Identifies execution of a sensitive Transaction Code.\n\nSource Action: Execute a sensitive Transaction Code.\n\n**Recommended for Production only**\n\nTransaction Codes should be maintained in watchlist \"\"SAP - Sensitive Transaction Codes\"\"\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "High",
                "enabled": true,
                "query": "// Define Variables\r\nlet Role = 'Production';\r\nlet AuditClasses = dynamic(['AU3']); // Audit Log Classes - Transaction Started\r\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\r\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\r\n// Get Relevant Systems from WatchList\r\nlet systemID = _GetWatchlist('SAP - Systems');\r\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"S4H\",\"Production\",\"ERP\",\r\n    \"XXX\",\"Sandbox\",\"BW\"]\r\n; \r\n// Get Relevant Transaction Codes\r\nlet SensitiveTcode = _GetWatchlist('SAP - Sensitive Transactions');\r\nlet fixedTcode = datatable(TransactionCode:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"RSAU_CONFIG\",\"RZ11\",\"SM19\"]\r\n; \r\nlet UnitedCodes = \r\n    union SensitiveTcode, fixedTcode\r\n    | summarize by TransactionCode;\r\nlet UnitedSystem =\r\nunion systemID, fixedSID\r\n| summarize by SystemID, SystemRole, SystemUsage\r\n| where SystemRole == Role; // Recommended  is Production only\r\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\r\n// Query logic\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| where TransactionCode_s in (UnitedCodes)\r\n| project-rename SystemID = SystemID_s\r\n| lookup kind = inner (UnitedSystem) on SystemID\r\n| order by TimeGenerated asc\r\n| project TimeGenerated,Instance_s ,SystemID, ClientID_s, User_s, TransactionCode_s, MessageText_s, MessageID_s, Email_s, TerminalIPv6_s, Host_s",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Discovery",
                    "Execution"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": null,
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": {
                    "SAP_User": "User_s",
                    "SAP_Client": "ClientID_s",
                    "SAP_Instance": "Instance_s",
                    "SAP_System_I_D": "SystemID"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/8aa67406-f7ef-4259-8f39-7b3aeec7b478')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/8aa67406-f7ef-4259-8f39-7b3aeec7b478')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - Execution of Sensitive Function Module",
                "description": "Identifies execution of a sensitive ABAP Function Module.\n\nSource Action: Execute a sensitive function module directly using SE37.\n\n**Recommended for Production only**\n\nSensitive functions should be maintained in \"SAP - Sensitive Function Modules\" Watchlist.\nTable logging changes should be activated for table \"EUFUNC\" in backend. (SE13)\n\n*Data Sources: SAPcon -  Table Data Log*",
                "severity": "High",
                "enabled": false,
                "query": "// Define variables\r\nlet RelTable = \"EUFUNC\"; // Relevant table\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\nlet SenseModules =  _GetWatchlist('SAP - Sensitive Function Modules');\r\nlet fixedModules = datatable(FunctionModule:string)['RSAU_CLEAR_AUDIT_LOG','BAPI_USER_CREATE', 'RFC_GET_TABLE_ENTRIES']; \r\nlet UnitedModules =\r\ntoscalar(union fixedModules, SenseModules\r\n| summarize FunctionModules =  make_set(FunctionModule));\r\n// Query logic\r\nlet LastLogin = \r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditLogIn)\r\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\r\nABAPTableDataLog_CL\r\n| where TableName_s == RelTable \r\n| extend Module = extract(@\"\\s+(.{1,}\\b)\\s+\", 1, LogKey_s, typeof(string)) // Extract Function Module\r\n| extend FunctionGroup = extract(@\"^FL([^\\s]*)\\s\", 1, LogKey_s, typeof(string)) // Extract Function Group\r\n| extend ExecutionVariant = extract(@\"\\b(\\w+)$\", 1, LogKey_s, typeof(string)) // Extract Execution Varient\r\n| where Module in (UnitedModules) // Module is sensitive\r\n| lookup kind=inner LastLogin on $left.UserName_s == $right.User_s\r\n| project TimeGenerated, Instance_s ,SystemID_s, UserName_s, ClientID_s, Email_s, TerminalIPv6_s, Host_s, Module, FunctionGroup, ExecutionVariant",
                "queryFrequency": "PT2H",
                "queryPeriod": "PT2H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Discovery",
                    "CommandAndControl"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": null,
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": {
                    "SAP_Client": "ClientID_s",
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_Instance": "Instance_s",
                    "SAP_User": "UserName_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/a221887f-0de6-4128-b94e-50575a58fe70')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/a221887f-0de6-4128-b94e-50575a58fe70')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - Function Module tested",
                "description": "Identifies testing of a function module.\n\nSource Action: Test a function module using  SE37 / SE80.\n\n**Recommended for Production only**\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "High",
                "enabled": true,
                "query": "let Role = 'Production';\r\nlet ProgramName = 'RS_TESTFRAME_CALL';\r\nlet AuditClasses = dynamic(['AUW']); // Audit Log Classes - Report Started\r\nlet allSystemRoles = dynamic(['Sandbox', 'Developement', 'QualityAssurance', 'Training', 'Production']); // Available System Roles\r\nlet allSystemUsage = dynamic (['ERP', 'CRM', 'BW', 'Solman', 'Gateway', 'Enterprise Portal']); // Available System Usages\r\n// Get Relevant Systems from WatchList\r\nlet systemID = _GetWatchlist('SAP - Systems');\r\nlet fixedSID = datatable(SystemID: string, SystemRole: string, SystemUsage: string)\r\n    // Maintain these if WatchList is not available    \r\n    [\"S4H\", \"Production\", \"ERP\",\r\n    \"XXX\", \"Sandbox\", \"BW\"]\r\n; \r\nlet UnitedSystem = \r\nunion systemID, fixedSID\r\n| summarize by SystemID, SystemRole, SystemUsage\r\n| where SystemRole == Role; // Reccommended is Production only\r\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| where ABAPProgramName_s == ProgramName\r\n| project-rename SystemID = SystemID_s\r\n| lookup kind = inner (UnitedSystem) on SystemID\r\n| order by TimeGenerated asc\r\n| project TimeGenerated, Instance_s ,User_s, SystemID, ClientID_s, MessageText_s, MessageID_s,\r\nEmail_s, TerminalIPv6_s, Host_s ",
                "queryFrequency": "PT6H",
                "queryPeriod": "PT6H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Collection",
                    "DefenseEvasion",
                    "LateralMovement"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": null,
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": {
                    "SAP_User": "User_s",
                    "SAP_Client": "ClientID_s",
                    "SAP_Instance": "Instance_s",
                    "SAP_System_I_D": "SystemID"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/40b84f9f-f567-4807-8098-a32e746d0ecc')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/40b84f9f-f567-4807-8098-a32e746d0ecc')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - HANA DB - Assign Admin Authorizations",
                "description": "Identifies admin privileges/roles assignment.\n\nSource Action: Assign a user with any Admin role / privileges.\n\n*Data Sources: Linux Agent - Syslog*",
                "severity": "High",
                "enabled": true,
                "query": "Syslog \r\n| where ProcessName startswith \"HDB\"\r\n| where SyslogMessage contains \"ADMIN\" and (SyslogMessage contains \"GRANT PRIVILEGE\" or SyslogMessage contains \"GRANT ROLE\")",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "PrivilegeEscalation"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": null,
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": null,
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": null
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/77b28bf2-1b3e-49e6-ae9a-b539efd7ade5')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/77b28bf2-1b3e-49e6-ae9a-b539efd7ade5')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - HANA DB - Audit Trail Policy Changes",
                "description": "Identifies changes for HANA DB audit trail policies.\n\nSource Action: Create / update existing audit policy in security definitions.\n\n*Data Sources: Linux Agent - Syslog*",
                "severity": "High",
                "enabled": true,
                "query": "Syslog \r\n| where ProcessName startswith \"HDB\"\r\n| where SyslogMessage contains \"AUDIT POLICY\" ",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "LateralMovement",
                    "DefenseEvasion",
                    "Persistence"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": null,
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": null,
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": null
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/d74e8206-b153-4fe8-97a2-d7b921fe73a3')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/d74e8206-b153-4fe8-97a2-d7b921fe73a3')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - HANA DB - Deactivation of Audit Trail",
                "description": "Identifies deactivation of HANA DB audit log.\n\nSource Action: Deactivate Audit Log in HANA DB security defnitions.\n\n*Data Sources: Linux Agent - Syslog*",
                "severity": "High",
                "enabled": true,
                "query": "Syslog \r\n| where ProcessName startswith \"HDB\"\r\n| where SyslogMessage contains \"AUDIT CONFIGURATION\" and \r\n    SyslogMessage contains 'global_auditing_state' and \r\n    SyslogMessage contains 'False'",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Persistence",
                    "LateralMovement",
                    "DefenseEvasion"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": null,
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": null,
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": null
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/c9d389be-dcf2-4991-9806-1c4dc50f92d1')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/c9d389be-dcf2-4991-9806-1c4dc50f92d1')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - HANA DB - User Admin actions",
                "description": "Identifies user administration actions.\n\nSouirce Action: Create/Update/Delete a DB User.\n\n*Data Sources: Linux Agent - Syslog*",
                "severity": "High",
                "enabled": true,
                "query": "Syslog \r\n| where ProcessName startswith \"HDB\"\r\n| where SyslogMessage contains \"CREATE USER\" or \r\n    SyslogMessage contains 'ALTER USER' or \r\n    SyslogMessage contains 'DROP USER' or \r\n    SyslogMessage contains 'DROP SCHEMA'",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "PrivilegeEscalation"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": null,
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": null,
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": null
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/c19adf35-697f-482e-bd23-399c66400a98')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/c19adf35-697f-482e-bd23-399c66400a98')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - Login from unexpected network",
                "description": "Identifies logons from an unexpected network.\n\nSource Action: Logon to the backend system from an IP address which is not assigned to one of the netwroks.\n\nNetworks should be maintained in watchlist \"SAP - Networks\"\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "High",
                "enabled": true,
                "query": "let AuditClasses = dynamic(['AU1','AU5']); // Audit Log Classes - Dialog Logon Successful, RFC Logon Successful\r\n// Dialog / CPIC / RFC Int / RFC Ext / SRFC / User Switch / HTTP / Restore Session / API Call\r\nlet DialogLogonTypes = dynamic(['A', 'C', 'F', 'R', 'S', 'U', 'H', 'u', ' ']);\r\nlet Networks = _GetWatchlist('SAP - Networks'); \r\nlet fixedNetworks = datatable(Network: string)['111.68.128.0/17']; // Maintain these if watchlist is not available\r\nlet allNetworks = union Networks, fixedNetworks\r\n    | summarize by Network;\r\nABAPAuditLog_CL\r\n// Add audit classes\r\n| where MessageID_s in (AuditClasses)\r\n| where Variable1_s in (DialogLogonTypes) // Is a dialog logon type from the list\r\n| where isnotempty(TerminalIPv6_s) // There is a Ipv6 address\r\n| evaluate ipv4_lookup(allNetworks, TerminalIPv6_s, Network, return_unmatched = true)\r\n// Similar to regular lookup, by ipv4 address, unmatched is like left join\r\n| where isempty(Network) // Network is not familiar\r\n// Details\r\n| project TimeGenerated, SystemID_s, ClientID_s, User_s, TransactionCode_s, MessageText_s, Email_s , TerminalIPv6_s, Host_s",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "InitialAccess"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": null,
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": {
                    "SAP_Client": "ClientID_s",
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_User": "User_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/68e54b48-45a0-4643-b59e-69e993c6d24e')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/68e54b48-45a0-4643-b59e-69e993c6d24e')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - New ICF Service Handlers",
                "description": "Identifies creation of ICF Handlers.\nSource Action: Assign a new handler to a service using SICF.\n*Data Sources: SAPcon - Table Data Log*",
                "severity": "High",
                "enabled": false,
                "query": "ABAPTableDataLog_CL\r\n| where TableName_s == \"ICFHANDLER\"\r\n| where TableField_s == \"ICF_NAME\" // Service name\r\n| where OldValue_s == \"\" and NewValue_s != \"\" // New value is inserted in name -> new service\r\n| order by TimeGenerated desc\r\n| project TimeGenerated, Service = NewValue_s",
                "queryFrequency": "PT2H",
                "queryPeriod": "PT2H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Persistence",
                    "LateralMovement",
                    "CommandAndControl"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": null,
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": null,
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": null
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/b608819d-e381-4fa2-b41e-fad912e76fea')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/b608819d-e381-4fa2-b41e-fad912e76fea')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - New ICF Services",
                "description": "Identifies creation of ICF Services.\nSource Action: Create a service using SICF.\n*Data Sources: SAPcon - Table Data Log*",
                "severity": "High",
                "enabled": false,
                "query": "ABAPTableDataLog_CL\r\n| where TableName_s == \"ICFSERVLOC\"\r\n| where TableField_s == \"ICF_NAME\" // Service name\r\n| where OldValue_s == \"\" and NewValue_s != \"\" // New value is inserted in name -> new service\r\n| order by TimeGenerated desc\r\n| project TimeGenerated, Service = NewValue_s",
                "queryFrequency": "PT2H",
                "queryPeriod": "PT2H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "CommandAndControl",
                    "Persistence",
                    "LateralMovement"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": null,
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": null,
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": null
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/7857c016-e080-417d-94c5-4bac7f467f38')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/7857c016-e080-417d-94c5-4bac7f467f38')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - RFC Execution of a Sensitive Function Module",
                "description": "Identifies execution of a sensitive function module using RFC.\n\nSource Action: Execute a function module using RFC.\n\n**Recommended for Production only**\n\nFunction Modules should be maintained in watchlist \"SAP - Sensitive Function Modules\"\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "High",
                "enabled": true,
                "query": "let Role = \"Production\";\r\nlet AuditClasses = dynamic(['AUK']); // Audit Log Classes - Successful RFC call &C (function group = &A)\r\nlet allSystemRoles = dynamic(['Sandbox', 'Developement', 'QualityAssurance', 'Training', 'Production']); // Available System Roles\r\nlet allSystemUsage = dynamic (['ERP', 'CRM', 'BW', 'Solman', 'Gateway', 'Enterprise Portal']); // Available System Usages\r\n// Get Relevant Systems from WatchList\r\nlet systemID = _GetWatchlist('SAP - Systems');\r\nlet fixedSID = datatable(SystemID: string, SystemRole: string, SystemUsage: string)\r\n    // Maintain these if WatchList is not available    \r\n    [\"S4H\", \"Production\", \"ERP\",\r\n    \"XXX\", \"Sandbox\", \"BW\"]\r\n; \r\n// Get Relevant Function Modules\r\nlet SensitiveFM = _GetWatchlist('SAP - Sensitive Function Modules');\r\nlet fixedFM = datatable(FunctionModule: string)\r\n    // Maintain these if WatchList is not available    \r\n    [\"RSAU_CLEAR_AUDIT_LOG\"]\r\n; \r\nlet UnitedSystems = union systemID, fixedSID\r\n| where SystemRole == Role // Recommended  is Production only\r\n| summarize by SystemID;\r\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\r\nlet UnitedSensitive =  union SensitiveFM, fixedFM\r\n| summarize by FunctionModule;\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| project-rename FunctionModule = Variable3_s, FunctionGroup = Variable1_s\r\n| where SystemID_s in (UnitedSystems) // The systemID is in this list\r\n| where FunctionModule in (UnitedSensitive) // Function module is sensitive\r\n| order by TimeGenerated asc\r\n| project TimeGenerated,Instance_s ,User_s, SystemID_s, ClientID_s, MessageText_s, FunctionGroup, FunctionModule, MessageID_s, Email_s, TerminalIPv6_s, Host_s",
                "queryFrequency": "PT2H",
                "queryPeriod": "PT2H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Execution",
                    "LateralMovement",
                    "Discovery"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": null,
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": {
                    "SAP_User": "User_s",
                    "SAP_Client": "ClientID_s",
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_Instance": "Instance_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/48259509-0255-47f2-8b4e-c40515613998')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/48259509-0255-47f2-8b4e-c40515613998')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - Sensitive privileged user logged in",
                "description": "Identifies Dialog logon of a sensitive privileged user. \n\nSource Action: Logon to the backend system using SAP* or anoter privileged user.\n\nPriveleged users should be maintained in \"SAP - Privileged Users\" Watchlist\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "High",
                "enabled": true,
                "query": "// Define Variables\r\n// Audit Log Classes - Dialog Logon Successful\r\nlet AuditClassesSuccess = dynamic(['AU1']);\r\nlet AuditClassesFail = dynamic(['BU1']);\r\nlet AuditRFCSuccess = dynamic(['AU5']);\r\nlet AuditRFCFail = dynamic(['AU6']);\r\nlet LogonTypes = dynamic(['A','H', 'R', 'S']); // Dialog / HTTP\r\n// Get Relevant User from WatchList\r\nlet PrivelegedUsers = _GetWatchlist('SAP - Privileged Users');\r\nlet fixedUsers = datatable(User:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"SAP*\",\"DDIC\"]\r\n;\r\nlet SensProfiles = _GetWatchlist('SAP - Sensitive Profiles') | summarize  by Profile;\r\nlet SensRoles = _GetWatchlist('SAP - Sensitive Roles') | summarize  by Role;\r\n// Maintain these if System doesn't have CR's\r\nlet FixedUserMD = datatable(TimeGenerated : datetime, UserName_s : string, RoleMembership_s : string)[];\r\n// Priveleged Users by sensitive role/profile based on user master data\r\nlet ABAPUserMd = \r\nunion isfuzzy=true table(\"ABAPUserMD_CL\"), FixedUserMD;\r\nlet PrivUserdByMD = ABAPUserMd\r\n| extend Roles = parse_json(RoleMembership_s)[\"SapRole\"], Profiles = parse_json(RoleMembership_s)[\"SapProfile\"]\r\n| mv-expand Roles, Profiles\r\n| where Roles in (SensRoles) or Profiles in (SensProfiles)\r\n| summarize by User = UserName_s;\r\nlet UnitedPrivileged = union PrivelegedUsers, fixedUsers, PrivUserdByMD\r\n| summarize by User;\r\n// Query logic\r\nABAPAuditLog_CL \r\n| where (MessageID_s in (AuditClassesSuccess) and Variable1_s in (LogonTypes)) or // Success login\r\nMessageID_s in (AuditClassesFail) or // Failed login\r\n(MessageID_s in (AuditRFCSuccess) and Variable1_s in (LogonTypes)) or // Success RFC login\r\nMessageID_s in (AuditRFCFail) // Failed RFC login\r\n| where User_s in (UnitedPrivileged)\r\n| project-rename LogonType = Variable1_s\r\n| project TimeGenerated, Instance_s ,SystemID_s, ClientID_s, LogonType, User_s, MessageText_s, \r\nEmail_s, TerminalIPv6_s, Host_s\r\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "InitialAccess",
                    "CredentialAccess"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": null,
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": {
                    "SAP_Client": "ClientID_s",
                    "SAP_Instance": "Instance_s",
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_User": "User_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/099a5452-5d1e-455f-8757-bcc99ee7a39a')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/099a5452-5d1e-455f-8757-bcc99ee7a39a')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - Sensitive privileged user makes a change in other user",
                "description": "Identifies changes  of sensitive privileged users in other users.\n\nSource Action: Change user details / authorizations using SU01.\n\nPriveleged users should be maintained in \"SAP - Privileged Users\" Watchlist\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "High",
                "enabled": true,
                "query": "// Audit Log Classes - User Master Changes\r\nlet AuditClasses = dynamic(['AU7', 'BUV', 'BUW', 'AU8', 'AU9', 'AUA', 'AUB', 'AUD', 'DUH', 'BU2']);\r\n// Get Relevant User from WatchList\r\nlet PrivelegedUsers = _GetWatchlist('SAP - Privileged Users');\r\nlet fixedUsers = datatable(User: string)\r\n    // Maintain these if WatchList is not available    \r\n    [\"SAP*\", \"DDIC\"]\r\n;\r\nlet SensProfiles = _GetWatchlist('SAP - Sensitive Profiles') | summarize  by Profile;\r\nlet SensRoles = _GetWatchlist('SAP - Sensitive Roles') | summarize  by Role;\r\n// Maintain these if System doesn't have CR's\r\nlet FixedUserMD = datatable(TimeGenerated : datetime, UserName_s : string, RoleMembership_s : string)[];\r\n// Priveleged Users by sensitive role/profile based on user master data\r\nlet ABAPUserMd = \r\nunion isfuzzy=true table(\"ABAPUserMD_CL\"), FixedUserMD;\r\nlet PrivUserdByMD = ABAPUserMd\r\n| extend Roles = parse_json(RoleMembership_s)[\"SapRole\"], Profiles = parse_json(RoleMembership_s)[\"SapProfile\"]\r\n| mv-expand Roles, Profiles\r\n| where Roles in (SensRoles) or Profiles in (SensProfiles)\r\n| summarize by User = UserName_s;\r\nlet UnitedPrivleged = union PrivelegedUsers, fixedUsers, PrivUserdByMD\r\n| summarize by User;\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| where User_s in (UnitedPrivleged) // The user that makes a change is a sensitive privileged user\r\n| project TimeGenerated, Instance_s ,SystemID_s, ClientID_s, User_s, MessageText_s, MessageID_s,\r\n     Email_s, TerminalIPv6_s, Host_s\r\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "PrivilegeEscalation",
                    "CredentialAccess"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": null,
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": {
                    "SAP_User": "User_s",
                    "SAP_Instance": "Instance_s",
                    "SAP_Client": "ClientID_s",
                    "SAP_System_I_D": "SystemID_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/1eee246c-383b-4569-acb5-f506769d4922')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/1eee246c-383b-4569-acb5-f506769d4922')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - Sensitive Users Password Change and Login",
                "description": "Identifies password changes for privileged users.\n\nSource Action: Change Password for a user and login to the system.\n\nPriveleged users should be maintained in \"SAP - Privileged Users\" Watchlist\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "High",
                "enabled": true,
                "query": "// Define variables\r\nlet ChangeAndLoginThreshold = 5; // Difference by minutes between Change in user to connect\r\nlet LoginAndRestThreshold = 3; // Difference by minutes between Connect and password reset\r\nlet AuditUserChange = dynamic(['AUD']); // Message of change in user\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\nlet AuditUserPassReset = dynamic(['BU2']); // Message of user password change\r\nlet PrivUsers = _GetWatchlist(\"SAP - Privileged Users\");\r\nlet fixedUsers = datatable(User: string)\r\n    // Maintain these if WatchList is not available    \r\n    [\"SAP*\", \"DDIC\"]\r\n;\r\nlet SensProfiles = _GetWatchlist('SAP - Sensitive Profiles') | summarize  by Profile;\r\nlet SensRoles = _GetWatchlist('SAP - Sensitive Roles') | summarize  by Role;\r\n// Maintain these if System doesn't have CR's\r\nlet FixedUserMD = datatable(TimeGenerated : datetime, UserName_s : string, RoleMembership_s : string)[];\r\n// Priveleged Users by sensitive role/profile based on user master data\r\nlet ABAPUserMd = \r\nunion isfuzzy=true table(\"ABAPUserMD_CL\"), FixedUserMD;\r\nlet PrivUserdByMD = ABAPUserMd\r\n| extend Roles = parse_json(RoleMembership_s)[\"SapRole\"], Profiles = parse_json(RoleMembership_s)[\"SapProfile\"]\r\n| mv-expand Roles, Profiles\r\n| where Roles in (SensRoles) or Profiles in (SensProfiles)\r\n| summarize by User = UserName_s;\r\nlet UnitedPrivleged = toscalar(union PrivUsers, fixedUsers, PrivUserdByMD\r\n| summarize Users = make_set(User));\r\n// Query Logic\r\nlet UserChange = // Get users change activity\r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditUserChange)\r\n| where Variable1_s in (UnitedPrivleged) // The user with the changed password is privileged user\r\n| project-rename UserChangeTimeGenerated = TimeGenerated, UserPassChanged = Variable1_s;\r\nlet UserLogIn = // Get users connections\r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditLogIn)\r\n| project-rename UserLogInTimeGenerated = TimeGenerated;\r\nABAPAuditLog_CL // Get users password reset\r\n| where MessageID_s in (AuditUserPassReset)\r\n| where User_s in (UnitedPrivleged) // The user with the changed password is privileged user\r\n| lookup kind=inner UserLogIn on TerminalIPv6_s, User_s // Lookup of user reset to user login\r\n| lookup kind=inner UserChange on TerminalIPv6_s, $left.User_s == $right.UserPassChanged // Lookup of user reset to user change\r\n| where abs(datetime_diff('Minute', UserChangeTimeGenerated, UserLogInTimeGenerated)) <= ChangeAndLoginThreshold // Connect after a change in user\r\n| where abs(datetime_diff('Minute', TimeGenerated, UserLogInTimeGenerated)) <= LoginAndRestThreshold // Change password after connection\r\n| summarize by TimeGenerated, Instance_s ,SystemID_s, ClientID_s, UserAction = User_s1, PrivUserPassChanged = User_s, Email_s, TerminalIPv6_s, Host_s\r\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Impact",
                    "CommandAndControl",
                    "PrivilegeEscalation"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": null,
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": {
                    "SAP_Instance": "Instance_s",
                    "SAP_Client": "ClientID_s",
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_User": "UserAction"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/8baec0ff-0e6a-4293-90fc-5b4b64a59522')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/8baec0ff-0e6a-4293-90fc-5b4b64a59522')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - SPNego Attack",
                "description": "Identifies SPNego Replay Attack.\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "High",
                "enabled": true,
                "query": "// Define variables\r\nlet AuditClasses = dynamic(['BUI']); // Message of SPNego\r\n// Query logic\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| project TimeGenerated, Instance_s , SystemID_s, ClientID_s, User_s ,  Email_s, TerminalIPv6_s, Host_s",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Impact",
                    "LateralMovement"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": null,
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": {
                    "SAP_Client": "ClientID_s",
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_User": "User_s",
                    "SAP_Instance": "Instance_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/d7b07924-44c2-4b75-95f8-1cb886725459')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/d7b07924-44c2-4b75-95f8-1cb886725459')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - System Configuration Change",
                "description": "Identifies changes for system configuration. \n\nSource Action:  Adapt system change options or software components modifcation using SE06 transaction code.\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "High",
                "enabled": true,
                "query": "// Audit Log Classes - System Change Configuration\r\nlet AuditClasses = dynamic(['EU1']); // Relevant message\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| project \r\n// Details\r\nTimeGenerated,Instance_s, ClientID_s ,SystemID_s, User_s, TransactionCode_s, SoftwareComponent = Variable1_s, NewModifiabilityStatus = Variable2_s, MessageText_s,\r\nEmail_s, TerminalIPv6_s, Host_s\r\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Exfiltration",
                    "DefenseEvasion",
                    "Persistence"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": null,
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": {
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_User": "User_s",
                    "SAP_Instance": "Instance_s",
                    "SAP_Client": "ClientID_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/dafc0135-f405-4b83-b244-fe0d9401c245')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/dafc0135-f405-4b83-b244-fe0d9401c245')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - User Creates and uses new user",
                "description": "Identifies a user creating and using other users.\n\nSource Action: Create a user using SU01. Login using the newly created user from the same IP.\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "High",
                "enabled": true,
                "query": "// Define Variables\r\nlet MinutesThreshold = 15; // Difference by minutes between Create and Connect\r\nlet AuditUserCreated = dynamic(['AU7']); // Message of create user\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\n// Query Logic\r\nlet UserCreated = // Get users created\r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditUserCreated)\r\n| project-rename UserCreationTimeGenerated = TimeGenerated, UserCreated = Variable1_s;\r\nABAPAuditLog_CL // Get users connections\r\n| where MessageID_s in (AuditLogIn)\r\n| lookup kind=inner UserCreated on TerminalIPv6_s,$left.User_s == $right.UserCreated // Lookup of user created to user log in\r\n| where abs(datetime_diff('Minute', TimeGenerated, UserCreationTimeGenerated)) <= MinutesThreshold // Connect after creation\r\n| summarize by TimeGenerated, Instance_s ,SystemID_s, ClientID_s, UserAction = User_s1, UserCreated = User_s, Email_s, TerminalIPv6_s,  Host_s",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Discovery",
                    "PreAttack",
                    "InitialAccess"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": null,
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": {
                    "SAP_User": "UserAction",
                    "SAP_Client": "ClientID_s",
                    "SAP_Instance": "Instance_s",
                    "SAP_System_I_D": "SystemID_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/b42cfa36-5a2f-4306-b4e3-c5946c8aeb6e')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/b42cfa36-5a2f-4306-b4e3-c5946c8aeb6e')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - User Unlocks and uses other users",
                "description": "Identifies a user unlock and usage by other users.\n\nSource Action: Unlock a user using SU01. Login using the unlocked user from the same IP.\n\n*Data Sources: SAPcon -  Audit Log*\n*Data Sources: SAPcon -  Change Documents Log*",
                "severity": "High",
                "enabled": true,
                "query": "// Define variables\r\nlet MinutesThreshold = 15; // Difference by minutes between Unlock and Connect\r\nlet AuditUserUnlocked = dynamic(['AUA']); // Message of unlock user\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\n// Query Logic\r\nlet UserUnlocked = // Get users unlocked\r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditUserUnlocked)\r\n| project-rename UserUnlockTimeGenerated = TimeGenerated, UserUnlocked = Variable1_s;\r\nABAPAuditLog_CL // Get users connections\r\n| where MessageID_s in (AuditLogIn)\r\n| lookup kind=inner UserUnlocked on TerminalIPv6_s, $left.User_s == $right.UserUnlocked // Lookup of user unlocked to user log in\r\n| where abs(datetime_diff('Minute', TimeGenerated, UserUnlockTimeGenerated)) <= MinutesThreshold // Connect after unlock\r\n| summarize by TimeGenerated, Instance_s ,SystemID_s, ClientID_s, UserAction = User_s1, UserUnlocked = User_s, Email_s,  TerminalIPv6_s, Host_s",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "PreAttack",
                    "InitialAccess",
                    "Discovery",
                    "LateralMovement"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": null,
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": {
                    "SAP_Instance": "Instance_s",
                    "SAP_Client": "ClientID_s",
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_User": "UserAction"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/fb9a1dc2-07f4-4683-acde-eff464b8e194')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/fb9a1dc2-07f4-4683-acde-eff464b8e194')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "(Private Preview) Insider Risk Management: Anomalous Access (UEBA)",
                "description": "The User Threshold for Anomalous Access is Exceeded",
                "severity": "Medium",
                "enabled": true,
                "query": "// Rule Name - Insider Risk Management: Anomalous Access (UEBA)\r\n// Rule Description - The User Threshold for Anomalous Access is Exceeded\r\nlet AnomalySignIns = BehaviorAnalytics\r\n| extend FirstTimeDeviceLogon = tostring(ActivityInsights.FirstTimeUserLoggedOnToDevice)\r\n| extend FirstTimeUserAction = tostring(ActivityInsights.FirstTimeUserPerformedAction)\r\n| extend UncommonAction = tostring(ActivityInsights.ActionUncommonlyPerformedByUser)\r\n| extend UncommonVolumeOfActions = tostring(ActivityInsights.UncommonHighVolumeOfActions)\r\n| where FirstTimeDeviceLogon == \"True\" or FirstTimeUserAction == \"True\" or UncommonAction == \"True\" or UncommonVolumeOfActions == \"True\";\r\nAnomalySignIns | join (SigninLogs) on UserPrincipalName\r\n| where SourceIPLocation <> \"\"\r\n| extend AuthenticationStatus = tostring(parse_json(AuthenticationDetails)[0].succeeded)\r\n| extend DeviceisCompliant = tostring(DeviceDetail.isCompliant)\r\n| extend DeviceisManaged = tostring(DeviceDetail.isManaged)\r\n| extend UserBlastRadius = tostring(UsersInsights.BlastRadius)\r\n| extend UserProfile = strcat(\"https://portal.azure.com/#blade/Microsoft_AAD_IAM/UserDetailsMenuBlade/Profile/userId/\",UserId)\r\n| summarize count() by UserPrincipalName, ActionType, EventSource, AuthenticationStatus, DeviceisCompliant, DeviceisManaged, UserBlastRadius, Location, SourceIPLocation, UserProfile\r\n| project UserPrincipalName, count_, ActionType, EventSource, AuthenticationStatus, DeviceisCompliant, DeviceisManaged, UserBlastRadius, Location, SourceIPLocation, UserProfile\r\n| where count_ > 25 // Adjust & Tune Anomaly Thresholds within Organizational Requirements\r\n// | where Location <> \"US\" // Adjust Gelocations within Organizational Requirements\r\n// | where SourceIPLocation !contains \"redmond\" // Adjust Gelocations within Organizational Requirements\r\n| sort by count_ desc\r\n| limit 250\r\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P2D",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "tactics": [],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "Name",
                                "columnName": "UserPrincipalName"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/787399eb-9c8d-4e2e-a158-03d84f5f4c95')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/787399eb-9c8d-4e2e-a158-03d84f5f4c95')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "(Private Preview) Insider Risk Management: High User Security Alerts Count",
                "description": "The User Threshold for SecurityAlerts is Exceeded",
                "severity": "Medium",
                "enabled": true,
                "query": "// Rule Name - (Private Preview) Insider Risk Management: High User Security Alerts Count\r\n// Rule Description - The User Threshold for SecurityAlerts is Exceeded\r\nSecurityIncident\r\n    | summarize hint.strategy = shuffle arg_max(LastModifiedTime, *) by IncidentNumber\r\n    | mv-expand AlertIds\r\n    | extend AlertId = tostring(AlertIds)\r\n    | join kind= innerunique ( \r\n        SecurityAlert \r\n        )\r\n        on $left.AlertId == $right.SystemAlertId\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n| extend Href_ = tostring(parse_json(ExtendedLinks)[0].Href)\r\n| where UPN <> \"\"\r\n| summarize count() by UPN, AlertName, Severity, ProductName\r\n| extend SecurityAlerts = count_\r\n| where SecurityAlerts > 10 //Adjust & Tune within Organzational Requirements\r\n| sort by SecurityAlerts desc\r\n| limit 250",
                "queryFrequency": "P1D",
                "queryPeriod": "P14D",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "tactics": [],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "AadUserId",
                                "columnName": "UPN"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/c0d22544-292f-43bc-88d7-05004f3e56f2')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/c0d22544-292f-43bc-88d7-05004f3e56f2')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "(Private Preview) Insider Risk Management: Microsoft 365 Insider Risk Management Alert Observed",
                "description": "Microsoft 365 Insider Risk Management Triggered An Alert",
                "severity": "Medium",
                "enabled": true,
                "query": "// Rule Name - (Private Preview) Insider Risk Management: Microsoft 365 Insider Risk Management Alert Observed\r\n// Rule Description - Microsoft 365 Insider Risk Management Triggered An Alert\r\nSecurityAlert\r\n| where ProductName == \"Microsoft 365 Insider Risk Management\"\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n| extend Href_ = tostring(parse_json(ExtendedLinks)[0].Href)\r\n| extend UserPrincipalName = UPN\r\n| distinct AlertName, ProductName, Status, AlertLink, UserPrincipalName, Tactics, TimeGenerated\r\n| sort by TimeGenerated desc\r\n| limit 250",
                "queryFrequency": "PT6H",
                "queryPeriod": "PT7H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "tactics": [],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "AadUserId",
                                "columnName": "UserPrincipalName"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/cea1438e-659c-45f7-b5d5-0208c3d03931')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/cea1438e-659c-45f7-b5d5-0208c3d03931')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "(Private Preview) Insider Risk Management: Risky User Access By Application (Machine Learning - Basket)",
                "description": "The User Threshold for Risky User Access by Application is Exceeded",
                "severity": "Medium",
                "enabled": true,
                "query": "// Rule Name - (Private Preview) Insider Risk Management: Risky User Access By Application (Machine Learning - Basket)\r\n// Rule Description - The User Threshold for Risky User Access by Application is Exceeded\r\nSigninLogs\r\n| where RiskState == \"atRisk\"\r\n| project UserPrincipalName, Location, AppDisplayName, RiskState\r\n| evaluate basket(0.01) // Adjust & Tune Thresholds within Organzational Requirements\r\n// | where Percent > 50 // Adjust & Tune Thresholds within Organzational Requirements\r\n| where UserPrincipalName <> \"\"\r\n| where AppDisplayName <> \"\"\r\n| project Percent, UserPrincipalName, Location, AppDisplayName, RiskState\r\n| sort by Percent desc\r\n| limit 250",
                "queryFrequency": "P1D",
                "queryPeriod": "PT25H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "tactics": [],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "AadUserId",
                                "columnName": "UserPrincipalName"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/406b6efe-3403-4200-b90c-b9bf798ff213')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/406b6efe-3403-4200-b90c-b9bf798ff213')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "<HoneyTokens> KeyVault HoneyToken key accessed",
                "description": "",
                "severity": "Medium",
                "enabled": true,
                "query": "let timeframe=5m;\nlet fullAzureLogs = \n    (AzureDiagnostics\n    | union (print TimeGenerated=now(), ResourceType=\"\", OperationName=\"\", ResourceId=\"\", requestUri_s=\"\", \n    CallerIPAddress=\"\", identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g=\"\", \n    identity_claim_http_schemas_xmlsoap_org_ws_2005_05_identity_claims_name_s=\"\" | take 0))\n    | where TimeGenerated > ago(timeframe)\n    | where ResourceType == \"VAULTS\"\n    | where OperationName !in (\"KeyNearExpiryEventGridNotification\", \"KeyExpiredEventGridNotification\", \"KeyNewVersionEventGridNotification\", \"KeyBackup\", \"KeyCreate\", \"KeyList\", \"KeyRestore\", \"KeyResourcePut\", \"KeyResourceGet\", \"KeyResourceList\", \"KeyRecover\", \"KeyGetDeleted\")\n    | project ResourceId=toupper(ResourceId), requestUri_s, OperationName, CallerIPAddress\n        , AccountObjectId=identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g, AccountUPN=identity_claim_http_schemas_xmlsoap_org_ws_2005_05_identity_claims_name_s\n    | parse kind=regex flags=U requestUri_s with \"https://\" KVName \".vault.azure.net/keys/\" HoneyToken \"[?|/]\" *\n    | parse kind=regex requestUri_s with \"https://management.azure.com/\" * \"/providers/Microsoft.KeyVault/vaults/\" KVName2 \"/keys/\" HoneyToken2 \"[?|/]\" *   \n    | extend KVName=iff(isempty(KVName), KVName2, KVName), HoneyToken=toupper(iff(isempty(HoneyToken), HoneyToken2, HoneyToken));\n// basic alert on honeytoken access\nfullAzureLogs\n| join kind=inner (\n    (_GetWatchlist('HoneyTokens') \n    | union (print ResourceProvider=\"\",ResourceId=\"\",HoneyToken=\"\",Properties=\"{}\" | take 0))\n    | where todynamic(Properties).Type == \"key\"\n    | extend ResourceId=toupper(ResourceId), HoneyToken=toupper(HoneyToken)\n    )\n    on ResourceId, HoneyToken\n| summarize make_set(OperationName) by ResourceId, HoneyToken, CallerIPAddress, AccountObjectId, AccountUPN\n// enrich with Account that accessed the KV at this time if available\n| join kind=leftouter (fullAzureLogs\n    | distinct ResourceId, AccountObjectId, AccountUPN\n    | where isnotempty(AccountObjectId))\n    on ResourceId\n| project ResourceId, HoneyToken, set_OperationName, CallerIPAddress, \n    AccountObjectId=iff(isempty(AccountObjectId), AccountObjectId1, AccountObjectId), \n    AccountUPN=iff(isempty(AccountUPN), AccountUPN1, AccountUPN)\n| extend AccountName=tostring(split(AccountUPN, '@')[0]), UPNSuffix=tostring(split(AccountUPN, '@')[1])\n| extend Severity=iff(set_OperationName contains \"/decrypt?\",\"High\", \"Medium\")",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "tactics": [
                    "Discovery"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": true,
                        "reopenClosedIncident": true,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "Selected",
                        "groupByEntities": [
                            "AzureResource"
                        ],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": {
                    "alertDisplayNameFormat": null,
                    "alertDescriptionFormat": "HoneyToken accessed. Operations: {{set_OperationName}}",
                    "alertTacticsColumnName": null,
                    "alertSeverityColumnName": "Severity"
                },
                "customDetails": {
                    "HoneyTokenKeyName": "HoneyToken",
                    "OperationsPerformed": "set_OperationName"
                },
                "entityMappings": [
                    {
                        "entityType": "AzureResource",
                        "fieldMappings": [
                            {
                                "identifier": "ResourceId",
                                "columnName": "ResourceId"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "CallerIPAddress"
                            }
                        ]
                    },
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "ObjectGuid",
                                "columnName": "AccountObjectId"
                            }
                        ]
                    },
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "Name",
                                "columnName": "AccountName"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/09aeda0d-eada-42d5-9bbf-bab697b83d34')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/09aeda0d-eada-42d5-9bbf-bab697b83d34')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "<HoneyTokens> KeyVault HoneyToken secret accessed",
                "description": "",
                "severity": "Medium",
                "enabled": true,
                "query": "let timeframe=5m;\nlet fullAzureLogs =\n(AzureDiagnostics\n| union (print TimeGenerated=now(), ResourceType=\"\", OperationName=\"\", ResourceId=\"\", requestUri_s=\"\",\nCallerIPAddress=\"\", identity_claim_oid_g=\"\",\nidentity_claim_upn_s=\"\" | take 0))\n| where TimeGenerated > ago(timeframe)\n| where ResourceType == \"VAULTS\"\n| where OperationName in (\"SecretGet\", \"SecretDelete\")\n| project ResourceId=toupper(ResourceId), requestUri_s, OperationName, CallerIPAddress\n, AccountObjectId=identity_claim_oid_g\n, AccountUPN=identity_claim_upn_s\n| parse kind=regex flags=U requestUri_s with \"https://\" KVName \".vault.azure.net/secrets/\" HoneyToken \"[?|/]\" *\n| parse kind=regex requestUri_s with \"https://management.azure.com/\" * \"/providers/Microsoft.KeyVault/vaults/\" KVName2 \"/keys/\" HoneyToken2 \"[?|/]\" *\n| extend KVName=iff(isempty(KVName), KVName2, KVName), HoneyToken=toupper(iff(isempty(HoneyToken), HoneyToken2, HoneyToken));\n// basic alert on honeytoken access\nfullAzureLogs\n| join kind=inner (\n(_GetWatchlist('HoneyTokens') \n| union (print ResourceProvider=\"\",ResourceId=\"\",HoneyToken=\"\",Properties=\"{}\" | take 0))\n| where todynamic(Properties).Type == \"secret\"\n| extend ResourceId=toupper(ResourceId), HoneyToken=toupper(HoneyToken)\n)\non ResourceId, HoneyToken\n| summarize make_set(OperationName) by ResourceId, HoneyToken, CallerIPAddress, AccountObjectId, AccountUPN\n// enrich with Account that accessed the KV at this time if available\n| join kind=leftouter (fullAzureLogs\n| distinct ResourceId, AccountObjectId, AccountUPN\n| where isnotempty(AccountObjectId))\non ResourceId\n| project ResourceId, HoneyToken, set_OperationName, CallerIPAddress,AccountObjectId,AccountUPN\n| extend AccountName=tostring(split(AccountUPN, '@')[0]), UPNSuffix=tostring(split(AccountUPN, '@')[1])",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "tactics": [
                    "Discovery"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": true,
                        "reopenClosedIncident": true,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "Selected",
                        "groupByEntities": [
                            "AzureResource"
                        ],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": {
                    "alertDisplayNameFormat": null,
                    "alertDescriptionFormat": "HoneyToken accessed. Operations: {{set_OperationName}}",
                    "alertTacticsColumnName": null,
                    "alertSeverityColumnName": null
                },
                "customDetails": {
                    "HoneyTokenKeyName": "HoneyToken",
                    "OperationsPerformed": "set_OperationName"
                },
                "entityMappings": [
                    {
                        "entityType": "AzureResource",
                        "fieldMappings": [
                            {
                                "identifier": "ResourceId",
                                "columnName": "ResourceId"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "CallerIPAddress"
                            }
                        ]
                    },
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "ObjectGuid",
                                "columnName": "AccountObjectId"
                            }
                        ]
                    },
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "Name",
                                "columnName": "AccountName"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/ff6588e6-f6a5-4941-a176-6dea639148e0')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/ff6588e6-f6a5-4941-a176-6dea639148e0')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "Abnormal Deny Rate for Source IP",
                "description": "Identifies abnormal deny rate for specific source IP to destination IP based on the normal average and standard deviation learned during a configured period. This can indicate potential exfiltration, initial access or C2, where attacker tries to exploit the same vulnerability on machines in the organization, but is being blocked by firewall rules.\n\nConfigurable Parameters:\n\n- Minimum of stds threshold - the number of stds to use in the threshold calculation. Default is set to 3.\n- Learning period time - learning period for threshold calculation in days. Default is set to 5.\n- Bin time - learning buckets time in hours. Default is set to 1 hour.\n- Minimum threshold - minimum threshold for alert. Default is set to 5.\n- Minimum bucket threshold - minimum learning buckets threshold for alert. Default is set to 5.",
                "severity": "Medium",
                "enabled": false,
                "query": "let LearningPeriod = 5d;\nlet RunTime = 1h;\nlet StartLearningPeriod = LearningPeriod + RunTime;\nlet EndRunTime = RunTime - 1d;\nlet BinTime = 1h;\nlet NumOfStdsThreshold = 3;\nlet MinThreshold = 5.0;\nlet MinLearningBuckets = 5;\nlet TrafficLogs = (AzureDiagnostics | where TimeGenerated  between (ago(StartLearningPeriod) .. ago(EndRunTime)) | where OperationName == \"AzureFirewallApplicationRuleLog\" or OperationName == \"AzureFirewallNetworkRuleLog\" | parse msg_s with * \"from \" srcip \":\" srcport \" to \" dsturl \":\" dstport \". Action: \" action \".\" * | where action == \"Deny\" | where isnotempty(dsturl) and isnotempty(srcip));\nlet LearningSrcIpDenyRate = (TrafficLogs | where TimeGenerated between (ago(StartLearningPeriod) .. ago(RunTime)) | summarize count() by srcip, bin(TimeGenerated, BinTime), dsturl | summarize LearningTimeSrcIpDenyRateAvg = avg(count_), LearningTimeSrcIpDenyRateStd = stdev(count_), LearningTimeBuckets = count() by srcip, dsturl | where LearningTimeBuckets > MinLearningBuckets); \nlet AlertTimeSrcIpDenyRate = (TrafficLogs | where TimeGenerated between (ago(RunTime) .. ago(EndRunTime)) | summarize AlertTimeSrcIpDenyRateCount = count() by srcip);\nAlertTimeSrcIpDenyRate | join kind=leftouter (LearningSrcIpDenyRate) on srcip | extend LreaningThreshold = max_of(LearningTimeSrcIpDenyRateAvg + NumOfStdsThreshold * LearningTimeSrcIpDenyRateStd, MinThreshold) | where AlertTimeSrcIpDenyRateCount > LreaningThreshold | project-away srcip1, LearningTimeSrcIpDenyRateAvg, LearningTimeSrcIpDenyRateStd | extend IPCustomEntity = srcip, URLCustomEntity = dsturl\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 1,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "InitialAccess",
                    "Exfiltration",
                    "CommandAndControl"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": null,
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": null
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/f5930018-ff11-42a3-8487-b96e4153d5ac')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/f5930018-ff11-42a3-8487-b96e4153d5ac')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "Abnormal Port to Protocol",
                "description": "Identifies communication for well known protocol over a non-standard port based on learning period activity. This can indicate malicious communication (C2) or exfiltration by attackers trying to communicate over known ports (22:SSH, 80:HTTP) but don't use the known protocol headers to match the port number.\n\nConfigurable Parameters:\n\n- Learning period time - learning period for protocol learning in days. Default is set to 7.",
                "severity": "Medium",
                "enabled": false,
                "query": "let LearningPeriod = 7d;\nlet RunTime = 1d;\nlet StartLearningPeriod = LearningPeriod + RunTime;\nlet EndRunTime = RunTime - 1d;\nlet LearningPortToProtocol = (AzureDiagnostics | where OperationName == \"AzureFirewallApplicationRuleLog\" | parse msg_s with protocol \" request from \" srcip \":\" srcport \" to \" dsturl \":\" dstport \".\" * | where isnotempty(dstport) | where TimeGenerated between (ago(StartLearningPeriod) .. ago(RunTime)) | summarize LearningTimeCount = count() by LearningTimeDstPort = dstport, LearningTimeProtocol = protocol, srcip, dsturl);\nlet AlertTimePortToProtocol = (AzureDiagnostics | where OperationName == \"AzureFirewallApplicationRuleLog\" | parse msg_s with protocol \" request from \" srcip \":\" srcport \" to \" dsturl \":\" dstport \".\" * | where isnotempty(dstport) | where TimeGenerated between (ago(RunTime) .. ago(EndRunTime)) | summarize AlertTimeCount = count() by AlertTimeDstPort = dstport, AlertTimeProtocol = protocol);\nAlertTimePortToProtocol | join kind=leftouter (LearningPortToProtocol) on $left.AlertTimeDstPort == $right.LearningTimeDstPort | where LearningTimeProtocol != AlertTimeProtocol | extend IPCustomEntity = srcip, URLCustomEntity = dsturl\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 1,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "DefenseEvasion",
                    "Exfiltration",
                    "CommandAndControl"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": null,
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": null
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/e6cebd3c-2b0b-498e-b677-835fded05d19')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/e6cebd3c-2b0b-498e-b677-835fded05d19')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "AD FS Database Local SQL Statements",
                "description": "This detection uses Application events from the \"MSSQL$MICROSOFT##WID\" provider to detect SQL statements run against an AD FS database (e.g Windows Internal Database (WID)).\n  A threat actor might want to extract the AD FS data configuration settings with a SQL statement or modify it with an UPDATE SQL statement.\n  In order to use this query you need to create a server audit and database audit specification on your AD FS database.",
                "severity": "Medium",
                "enabled": false,
                "query": " Event\r\n  | where EventLog =~ 'Application'\r\n  | where Source == 'MSSQL$MICROSOFT##WID' and EventID == '33205'\r\n  | where RenderedDescription has_all ('database_name:AdfsConfigurationV4','schema_name:IdentityServerPolicy','object_name:ServiceSettings')\r\n  | extend action_id = extract(\"action_id:([\\\\S]+)\", 1, RenderedDescription)\r\n  | extend session_server_principal_name = extract(\"session_server_principal_name:([\\\\S]+)\", 1, RenderedDescription)\r\n  | extend server_principal_name = extract(\"session_server_principal_name:([\\\\S]+)\", 1, RenderedDescription)\r\n  | extend Host = Computer, Account = split(server_principal_name, '\\\\')[1]",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "tactics": [],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "UserName"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "HostName",
                                "columnName": "Computer"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/e56bb40f-e0d2-4d65-86df-f13740bf1a1e')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/e56bb40f-e0d2-4d65-86df-f13740bf1a1e')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "ADFS DKM Master Key Export",
                "description": "Identifies an export of the ADFS DKM Master Key from Active Directory.\nReferences: https://blogs.microsoft.com/on-the-issues/2020/12/13/customers-protect-nation-state-cyberattacks/, \nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html?1\nTo understand further the details behind this detection, please review the details in the original PR and subequent PR update to this:\nhttps://github.com/Azure/Azure-Sentinel/pull/1562#issue-551542469\nhttps://github.com/Azure/Azure-Sentinel/pull/1512#issue-543053339\n",
                "severity": "Medium",
                "enabled": true,
                "query": "(union isfuzzy=true (SecurityEvent \n| where EventID == 4662 // You need to create a SACL on the ADFS Policy Store DKM group for this event to be created. \n| where ObjectServer == 'DS'\n| where OperationType == 'Object Access'\n//| where ObjectName contains '<GUID of ADFS Policy Store DKM Group object' This is unique to the domain. Check description for more details.\n| where ObjectType contains '5cb41ed0-0e4c-11d0-a286-00aa003049e2' // Contact Class\n| where Properties contains '8d3bca50-1d7e-11d0-a081-00aa006c33ed' // Picture Attribute - Ldap-Display-Name: thumbnailPhoto\n| extend timestamp = TimeGenerated, HostCustomEntity = Computer, AccountCustomEntity = SubjectAccount),\n(DeviceEvents\n| where ActionType =~ \"LdapSearch\"\n| where AdditionalFields.AttributeList contains \"thumbnailPhoto\"\n| where AdditionalFields.DistinguishedName contains \"CN=ADFS,CN=Microsoft,CN=Program Data\" // Filter results to show only hits related to the ADFS AD container\n| extend timestamp = TimeGenerated, HostCustomEntity = DeviceName, AccountCustomEntity = InitiatingProcessAccountName)\n)",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "tactics": [
                    "Collection"
                ],
                "alertRuleTemplateName": "18e6a87e-9d06-4a4e-8b59-3469cd49552d",
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "AccountCustomEntity"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "HostCustomEntity"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/7c897224-78b8-4314-8cda-fa2c45cfe6bf')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/7c897224-78b8-4314-8cda-fa2c45cfe6bf')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "ADFS Key Export (Sysmon)",
                "description": "This detection uses Sysmon telemetry to detect potential ADFS certificate material export. \nIn order to use this query you need to be collecting Sysmon EventIdD 17 and 18.\nIf you do not have Sysmon data in your workspace this query will raise an error stating:\nFailed to resolve scalar expression named \"[@Name]",
                "severity": "Medium",
                "enabled": true,
                "query": " // Adjust this to use a longer timeframe to identify ADFS servers\n  //let lookback = 6d;\n  // Adjust this to adjust the key export detection  timeframe\n  //let timeframe = 1d;\n  // Start be identifying ADFS servers to reduce FP chance\n  let ADFS_Servers = (\n  Event\n  //| where TimeGenerated > ago(timeframe+lookback)\n  | where Source == \"Microsoft-Windows-Sysmon\"\n  | where EventID == 18\n  | extend EventData = parse_xml(EventData).DataItem.EventData.Data\n  | mv-expand bagexpansion=array EventData\n  | evaluate bag_unpack(EventData)\n  | extend Key = tostring(column_ifexists('@Name', \"\")), Value = column_ifexists('#text', \"\")\n  | evaluate pivot(Key, any(Value), TimeGenerated, Source, EventLog, Computer, EventLevel, EventLevelName, EventID, UserName, MG, ManagementGroupName, _ResourceId)\n  | extend Image = column_ifexists(\"Image\", \"\")\n  | extend process = split(Image, '\\\\', -1)[-1]\n  | where process =~ \"Microsoft.IdentityServer.ServiceHost.exe\"\n  | summarize by Computer);\n  // Look for ADFS servers where Named Pipes event are present\n  Event\n  //| where TimeGenerated > ago(timeframe)\n  | where Source == \"Microsoft-Windows-Sysmon\"\n  | where EventID == 18\n  | where Computer in~ (ADFS_Servers)\n  | extend RenderedDescription = tostring(split(RenderedDescription, \":\")[0])\n  | extend EventData = parse_xml(EventData).DataItem.EventData.Data\n  | mv-expand bagexpansion=array EventData\n  | evaluate bag_unpack(EventData)\n  | extend Key = tostring(column_ifexists('@Name', \"\")), Value = column_ifexists('#text', \"\")\n  | evaluate pivot(Key, any(Value), TimeGenerated, Source, EventLog, Computer, EventLevel, EventLevelName, EventID, UserName, RenderedDescription, MG, ManagementGroupName, Type, _ResourceId)\n  | extend RuleName = column_ifexists(\"RuleName\", \"\"),\n      TechniqueId = column_ifexists(\"TechniqueId\", \"\"),\n      TechniqueName = column_ifexists(\"TechniqueName\", \"\"),\n      Image = column_ifexists(\"Image\", \"\"),\n      PipeName = column_ifexists(\"PipeName\", \"\")\n  | parse RuleName with * 'technique_id=' TechniqueId ',' * 'technique_name=' TechniqueName\n  // Look for Pipe related to querying the WID\n  | where PipeName == \"\\\\MICROSOFT##WID\\\\tsql\\\\query\"\n  | extend process = split(Image, '\\\\', -1)[-1]\n  // Exclude expected processes\n  | where process !in (\"Microsoft.IdentityServer.ServiceHost.exe\", \"Microsoft.Identity.Health.Adfs.PshSurrogate.exe\", \"AzureADConnect.exe\", \"Microsoft.Tri.Sensor.exe\", \"wsmprovhost.exe\",\"mmc.exe\", \"sqlservr.exe\")\n  | extend Operation = RenderedDescription\n  | extend HostCustomEntity = Computer, AccountCustomEntity = UserName ",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "tactics": [
                    "Collection"
                ],
                "alertRuleTemplateName": "dcdf9bfc-c239-4764-a9f9-3612e6dff49c",
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "AccountCustomEntity"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "HostCustomEntity"
                            }
                        ]
                    }
                ],
                "templateVersion": "1.0.0"
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/b90d055f-81ea-409a-8d72-70ae20a319dd')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/b90d055f-81ea-409a-8d72-70ae20a319dd')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "Anomalous AAD Account Creation",
                "description": "",
                "severity": "Medium",
                "enabled": true,
                "query": "BehaviorAnalytics\n| where ActionType == \"Add user\"\n| where ActivityInsights has \"True\"\n| join(\nAuditLogs\n) on $left.SourceRecordId == $right._ItemId\n| mv-expand TargetResources\n| extend Target =  iff(tostring(TargetResources.userPrincipalName) has \"#EXT#\",replace(\"_\",\"@\",tostring(split(TargetResources.userPrincipalName, \"#\")[0])),TargetResources.userPrincipalName),tostring(TargetResources.userPrincipalName)\n| extend DisplayName = tostring(UsersInsights.AccountDisplayName),\nUserPrincipalName = iff(UserPrincipalName has \"#EXT#\",replace(\"_\",\"@\",tostring(split(UserPrincipalName, \"#\")[0])),UserPrincipalName),\nUserName = iff(UserName has \"#EXT#\",replace(\"_\",\"@\",tostring(split(UserPrincipalName, \"#\")[0])),UserName)\n| sort by TimeGenerated desc\t\n| project TimeGenerated, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target,ActivityInsights ,SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "tactics": [
                    "Execution"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": true,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "P7D",
                        "matchingMethod": "Selected",
                        "groupByEntities": [
                            "Account"
                        ],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "UserPrincipalName"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/84a02047-a1fb-41cd-a3c7-af91affda8b5')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/84a02047-a1fb-41cd-a3c7-af91affda8b5')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "Anomalous login followed by Teams action",
                "description": "Detects anomalous IP address usage by user accounts and then checks to see if a suspicious Teams action is performed.\nQuery calculates IP usage Delta for each user account and selects accounts where a delta >= 90% is observed between the most and least used IP.\nTo further reduce results the query performs a prevalence check on the lowest used IP's country, only keeping IP's where the country is unusual for the tenant (dynamic ranges)\nFinally the user accounts activity within Teams logs is checked for suspicious commands (modifying user privileges or admin actions) during the period the suspicious IP was active.",
                "severity": "Medium",
                "enabled": true,
                "query": "//The bigger the window the better the data sample size, as we use IP prevalence, more sample data is better.\n//The minimum number of countries that the account has been accessed from [default: 2]\nlet minimumCountries = 2;\n//The delta (%) between the largest in-use IP and the smallest [default: 90]\nlet deltaThreshold = 95;\n//The maximum (%) threshold that the country appears in login data [default: 10]\nlet countryPrevalenceThreshold = 10;\n//The time to project forward after the last login activity [default: 60min]\nlet projectedEndTime = 60min; \n//Get Teams successful signins globally\nlet aadFunc = (tableName:string){\nlet signinData =\n  table(tableName)\n  | where AppDisplayName has \"Teams\"\n  | where ConditionalAccessStatus =~ \"success\"\n  | extend country = tostring(todynamic(LocationDetails)['countryOrRegion'])\n  | where isnotempty(country) and isnotempty(IPAddress);\n// Collect successful signins to teams\nlet loginEvents = \n  signinData\n  | summarize count(), country=any(country), make_list(TimeGenerated) by IPAddress, UserPrincipalName;\n//Calcualte delta between logins\nlet loginDelta =\n  loginEvents\n  | summarize max(count_), min(count_) by UserPrincipalName\n  | extend delta = toreal(max_count_ - min_count_) / max_count_ * 100\n  | where delta >= deltaThreshold;\n//Count number of countries used to sign in\nlet countryCount =\n  loginEvents\n  | summarize Countries = dcount(country) by UserPrincipalName;\n//Join delta and sign in counts to successful logins\nloginDelta\n| join kind=rightouter  (\n  loginEvents\n) on UserPrincipalName\n| join kind=rightouter (\n  countryCount\n) on UserPrincipalName\n//Check where the record meets the minimum required countries\n| where Countries >= minimumCountries\n| join kind=leftouter (\n      signinData\n      | summarize count() by country\n      | join (\n          //Now get the total number of logins from any country and join it to the previous count in a single table\n          signinData\n          | summarize count() by country\n          | summarize sum(count_), make_list(country)\n          | mv-expand list_country\n          | extend country = tostring(list_country)\n      ) on country\n      | summarize by country, count_, sum_count_\n      //Now calculate each countries prevalence within login events\n      | extend prevalence = toreal(count_) / toreal(sum_count_) * 100\n      | project-away sum_count_\n      | order by prevalence\n) on country\n//The % that suspicious country is prevalent in data, this can be configured, less than 10% is uncommon\n| where prevalence < countryPrevalenceThreshold\n| where min_count_ == count_\n//Login start and end times from the JSON object, this is the activity window the suspicious IP was active within\n| extend EventTimes = list_TimeGenerated\n| extend SuspiciousIP = IPAddress\n| project UserPrincipalName, SuspiciousIP, UserIPDelta = delta, SuspiciousLoginCountry = country, SuspiciousCountryPrevalence = prevalence, EventTimes\n//Teams join to collect operations the user account has performed within the given time range\n| join kind=inner( \n  OfficeActivity\n  | where Operation in~ (\"TeamsAdminAction\", \"MemberAdded\", \"MemberRemoved\", \"MemberRoleChanged\", \"AppInstalled\", \"BotAddedToTeam\")\n  | project Operation, UserId=tolower(UserId), OperationTime=TimeGenerated\n) on $left.UserPrincipalName == $right.UserId\n| mv-expand StartTime = EventTimes\n| extend StartTime = make_datetime(StartTime)\n//The end time is projected 60 minutes forward, in case actions took place within the last hour of the final login for the suspicious IP\n| extend ProjectedEndTime = make_datetime(StartTime + projectedEndTime)\n//Limit to operations carried out by the user account in the timeframe the IP was active\n| where OperationTime between (StartTime .. ProjectedEndTime)\n| project UserPrincipalName, SuspiciousIP, StartTime, ProjectedEndTime, OperationTime, Operation, SuspiciousLoginCountry, SuspiciousCountryPrevalence\n//Filter on suspicious actions\n| extend activitySummary = pack(tostring(StartTime), pack(\"Operation\",tostring(Operation), \"OperationTime\", OperationTime))\n| summarize make_bag(activitySummary) by UserPrincipalName, SuspiciousIP, SuspiciousLoginCountry, SuspiciousCountryPrevalence\n| extend IPCustomEntity = SuspiciousIP, AccountCustomEntity = UserPrincipalName\n};\nlet aadSignin = aadFunc(\"SigninLogs\");\nlet aadNonInt = aadFunc(\"AADNonInteractiveUserSignInLogs\");\nunion isfuzzy=true aadSignin, aadNonInt",
                "queryFrequency": "P1D",
                "queryPeriod": "P14D",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "tactics": [
                    "InitialAccess",
                    "Persistence"
                ],
                "alertRuleTemplateName": "2b701288-b428-4fb8-805e-e4372c574786",
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "AccountCustomEntity"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "IPCustomEntity"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/9214996c-590f-416c-9547-b1f8f553f171')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/9214996c-590f-416c-9547-b1f8f553f171')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "Anomalous Sign-in Activity",
                "description": "",
                "severity": "Medium",
                "enabled": true,
                "query": "\nBehaviorAnalytics\n| where ActionType == \"Sign-in\"\n| where UsersInsights.NewAccount == True or UsersInsights.DormantAccount == True\nor ActivityInsights.FirstTimeUserConnectedToResource == True and ActivityInsights.PeersConnectedToResource == False\nor ActivityInsights.FirstTimeUserConnectedWithClientApp == True and ActivityInsights.PeersConnectedOnAppId == False\n| join (\nSigninLogs | where Status.errorCode == 0 or Status.errorCode == 0 and RiskDetail != \"none\"\n) on $left.SourceRecordId == $right._ItemId\n| extend UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\",replace(\"_\",\"@\",tostring(split(UserPrincipalName, \"#\")[0])),UserPrincipalName),\nUserName = iff(UserName contains \"#EXT#\",replace(\"_\",\"@\",tostring(split(UserPrincipalName, \"#\")[0])),UserName)\n| project TimeGenerated, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType,[\"Evidence\"]=ActivityInsights, ResourceDisplayName,AppDisplayName,SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights\n",
                "queryFrequency": "PT5H",
                "queryPeriod": "PT5H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "tactics": [],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": null
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/7dbf250d-be71-4020-a077-d921754075c2')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/7dbf250d-be71-4020-a077-d921754075c2')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "Anomalous sign-in location by user account and authenticating application",
                "description": "This query over Azure Active Directory sign-in considers all user sign-ins for each Azure Active \nDirectory application and picks out the most anomalous change in location profile for a user within an \nindividual application. An alert is generated for recent sign-ins that have location counts that are anomalous\nover last day but also over the last 7-day and 14-day periods.",
                "severity": "Medium",
                "enabled": true,
                "query": "let lookBack_long = 14d;\nlet lookBack_med = 7d;\nlet lookBack = 1d;\nSigninLogs\n| where TimeGenerated >= startofday(ago(lookBack_long))\n| extend locationString = strcat(tostring(LocationDetails[\"countryOrRegion\"]), \"/\", tostring(LocationDetails[\"state\"]), \"/\", tostring(LocationDetails[\"city\"]), \";\") \n| project TimeGenerated, AppDisplayName , UserPrincipalName, locationString \n// Create time series \n| make-series dLocationCount = dcount(locationString) on TimeGenerated in range(startofday(ago(lookBack_long)),now(), 1d) \nby UserPrincipalName, AppDisplayName \n// Compute best fit line for each entry \n| extend (RSquare,Slope,Variance,RVariance,Interception,LineFit)=series_fit_line(dLocationCount) \n// Chart the 3 most interesting lines  \n// A 0-value slope corresponds to an account being completely stable over time for a given Azure Active Directory application\n| where Slope > 0.3\n| top 50 by Slope desc\n| join kind = leftsemi (\nSigninLogs\n| where TimeGenerated >= startofday(ago(lookBack_med))\n| extend locationString = strcat(tostring(LocationDetails[\"countryOrRegion\"]), \"/\", tostring(LocationDetails[\"state\"]), \"/\", tostring(LocationDetails[\"city\"]), \";\") \n| project TimeGenerated, AppDisplayName , UserPrincipalName, locationString \n| make-series dLocationCount = dcount(locationString) on TimeGenerated in range(startofday(ago(lookBack_med)) ,now(), 1d) \nby UserPrincipalName, AppDisplayName \n| extend (RSquare,Slope,Variance,RVariance,Interception,LineFit)=series_fit_line(dLocationCount) \n| top 50 by Slope desc\n| where Slope > 0.3\n) on UserPrincipalName, AppDisplayName\n| join kind = leftsemi (\nSigninLogs\n| where TimeGenerated >= startofday(ago(lookBack))\n| extend locationString = strcat(tostring(LocationDetails[\"countryOrRegion\"]), \"/\", tostring(LocationDetails[\"state\"]), \"/\", tostring(LocationDetails[\"city\"]), \";\") \n| project TimeGenerated, AppDisplayName , UserPrincipalName, locationString \n| make-series dLocationCount = dcount(locationString) on TimeGenerated in range(startofday(ago(lookBack)) ,now(), 1d) \nby UserPrincipalName, AppDisplayName \n| extend (RSquare,Slope,Variance,RVariance,Interception,LineFit)=series_fit_line(dLocationCount) \n| top 50 by Slope desc\n// Higher threshold requirement on last day anomaly\n| where Slope > 5\n) on UserPrincipalName, AppDisplayName\n| extend timestamp = TimeGenerated, AccountCustomEntity = UserPrincipalName",
                "queryFrequency": "P1D",
                "queryPeriod": "P14D",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "tactics": [
                    "InitialAccess"
                ],
                "alertRuleTemplateName": "7cb8f77d-c52f-4e46-b82f-3cf2e106224a",
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": null
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/2cc4da68-3de3-468b-9961-10c53b27e652')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/2cc4da68-3de3-468b-9961-10c53b27e652')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "Antonio Rodriguez Gonzalez",
                "description": "",
                "severity": "Medium",
                "enabled": true,
                "query": "SigninLogs\r\n| where UserDisplayName == \"Antonio Rodriguez Gonzalez\"",
                "queryFrequency": "PT5H",
                "queryPeriod": "PT5H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "tactics": [
                    "CredentialAccess"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": null
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/6858cc6d-8cab-4710-8f55-ad3c1eeee84f')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/6858cc6d-8cab-4710-8f55-ad3c1eeee84f')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "Attempts to sign in to disabled accounts",
                "description": "Identifies failed attempts to sign in to disabled accounts across multiple Azure Applications.\nDefault threshold for Azure Applications attempted to sign in to is 3.\nReferences: https://docs.microsoft.com/azure/active-directory/reports-monitoring/reference-sign-ins-error-codes\n50057 - User account is disabled. The account has been disabled by an administrator.",
                "severity": "Medium",
                "enabled": true,
                "query": "let threshold = 3;\nlet aadFunc = (tableName:string){\ntable(tableName)\n| where ResultType == \"50057\"\n| where ResultDescription =~ \"User account is disabled. The account has been disabled by an administrator.\"\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), applicationCount = dcount(AppDisplayName), \napplicationSet = make_set(AppDisplayName), count() by UserPrincipalName, IPAddress, Type\n| where applicationCount >= threshold\n| extend timestamp = StartTime, AccountCustomEntity = UserPrincipalName, IPCustomEntity = IPAddress\n};\nlet aadSignin = aadFunc(\"SigninLogs\");\nlet aadNonInt = aadFunc(\"AADNonInteractiveUserSignInLogs\");\nunion isfuzzy=true aadSignin, aadNonInt",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "tactics": [
                    "InitialAccess"
                ],
                "alertRuleTemplateName": "75ea5c39-93e5-489b-b1e1-68fa6c9d2d04",
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": true,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "P1D",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "AccountCustomEntity"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "IPCustomEntity"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/e05fec26-5f5d-4ec3-99b6-080d1086e817')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/e05fec26-5f5d-4ec3-99b6-080d1086e817')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "Azure activity matching known threats",
                "description": "This analytic matches Azure Activity logs to known threats from your threat intelligence repository. Reference the threat indicator to determine the threat type involved in the activity.",
                "severity": "Medium",
                "enabled": true,
                "query": "AzureActivity\n| take 1\n| extend IPCustomEntity = '80.87.202.49'\n| extend AccountCustomEntity = Caller",
                "queryFrequency": "P1D",
                "queryPeriod": "P14D",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "tactics": [
                    "Impact"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": true,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "P1D",
                        "matchingMethod": "Selected",
                        "groupByEntities": [
                            "IP"
                        ],
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": null
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/645179c0-2b4e-4dc9-889d-c33d738a58f5')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/645179c0-2b4e-4dc9-889d-c33d738a58f5')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "Azure Cloud shell activity",
                "description": "Azure Cloud shell activity",
                "severity": "Medium",
                "enabled": true,
                "query": "AzureActivity\r\n  | extend message = tostring(parse_json(Properties).message)\r\n  | extend AppId = tostring(parse_json(Claims).appid)\r\n  | where AppId contains \"c44b4083-3bb0-49c1-b47d-974e53cbdf3c\"\r\n  | where OperationName =~ \"Microsoft.Portal/consoles/write\"\r\n  | extend timestamp = TimeGenerated, AccountCustomEntity = Caller, IPCustomEntity = CallerIpAddress",
                "queryFrequency": "PT5H",
                "queryPeriod": "PT5H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "tactics": [
                    "InitialAccess"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "AccountCustomEntity"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "IPCustomEntity"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/b13569a8-b049-453c-ac70-81b02313f879')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/b13569a8-b049-453c-ac70-81b02313f879')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "Azure Security Center unusual storage access",
                "description": "Azure Security Center unusual storage access",
                "severity": "Medium",
                "enabled": true,
                "query": "SecurityEvent\r\n| take 1\r\n| extend User = 'seb@seccxp.ninja'\r\n| extend AccountCustomEntity = User\r\n| extend StorageAccountName = 'nbstorageaccount'\r\n| extend IPCustomEntity = IpAddress",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "tactics": [
                    "Execution",
                    "Collection"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": null
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/0c1de625-a87f-4a5c-9adf-82d40497e006')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/0c1de625-a87f-4a5c-9adf-82d40497e006')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "Azure VM Deletion",
                "description": "A simple analytics rule to detect deletion of a VM",
                "severity": "Medium",
                "enabled": true,
                "query": "AzureActivity\r\n| where OperationName == 'Delete Virtual Machine'\r\n| where ActivityStatus == 'Accepted'\r\n| extend AccountCustomEntity = Caller\r\n| extend IPCustomEntity = CallerIpAddress",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "tactics": [
                    "Impact"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": null
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/eff2e511-53d5-4221-a8ac-bfef44eb270c')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/eff2e511-53d5-4221-a8ac-bfef44eb270c')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "BFLateralMovement_CompromisedUserIOT-CustomGBBAnalytic",
                "description": "SuccessfulBruteForce leads to user account compromise and lateral movement to another user account.",
                "severity": "Medium",
                "enabled": true,
                "query": "let Successful_Brute_Force=(){\nCommonSecurityLog\n| summarize \n    LOGONFAILED=countif(Activity == \"4625 - An account failed to log on.\"),\n    LOGONSUCCEEDED=countif(Activity == \"4624 - An account was successfully logged on.\")\nby DestinationIP\n    | where LOGONSUCCEEDED > 0\n    | where LOGONFAILED > 19\n    | join kind= leftouter (CommonSecurityLog | where Activity == \"4624 - An account was successfully logged on.\" and DestinationIP == \"158.81.67.141\")\n    on DestinationIP};\nlet Lateral_movement=(){\nCommonSecurityLog\n| where Activity == \"4624 - An account was successfully logged on.\" and DeviceEventClassID == \"10 - RemoteInteractive\" and DestinationDnsDomain == \"damdemo.domain\"\n| project TimeGenerated, SourceUserName, DestinationUserName, SourceHostName, CompromisedHost=DestinationHostName, SourceIP, CompromisedIP=DestinationIP\n};\nSuccessful_Brute_Force\n| join kind=rightsemi  (Lateral_movement | project TimeGenerated, SourceUserName, DestinationUserName, SourceHostName, CompromisedHost, SourceIP, CompromisedIP)\non DestinationUserName\n| project TimeGenerated, DestinationUserName, SourceIP, CompromisedHost, CompromisedIP",
                "queryFrequency": "P7D",
                "queryPeriod": "P7D",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "tactics": [
                    "InitialAccess",
                    "CredentialAccess",
                    "LateralMovement"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": [
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "HostName",
                                "columnName": "CompromisedHost"
                            }
                        ]
                    },
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "DestinationUserName"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "SourceIP"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "CompromisedIP"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/7a4affe3-fa58-47bf-863f-9d2149405996')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/7a4affe3-fa58-47bf-863f-9d2149405996')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "CEF Alert With URL Entity ",
                "description": "",
                "severity": "Medium",
                "enabled": true,
                "query": "CommonSecurityLog\r\n| where TimeGenerated > ago(30m)\r\n| where ApplicationProtocol == 'web-browsing'\r\n| where DeviceVersion == '8.0.12'\r\n| project TimeGenerated, ReceiptTime, Url = strcat('http://', trim('\"', RequestURL))\r\n| sample 1\r\n| extend URLCustomEntity = Url\r\n",
                "queryFrequency": "PT5H",
                "queryPeriod": "PT5H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "tactics": [],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": null
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/3b10fdd2-c2af-49a6-93d8-5fb8ed35be7c')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/3b10fdd2-c2af-49a6-93d8-5fb8ed35be7c')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "Cisco - firewall block but success logon to Azure AD",
                "description": "Correlate IPs blocked by a Cisco firewall appliance with successful Azure Active Directory signins. \nBecause the IP was blocked by the firewall, that same IP logging on successfully to AAD is potentially suspect\nand could indicate credential compromise for the user account.",
                "severity": "Medium",
                "enabled": true,
                "query": "let PrivateIPregex = @'^127\\.|^10\\.|^172\\.1[6-9]\\.|^172\\.2[0-9]\\.|^172\\.3[0-1]\\.|^192\\.168\\.';\nlet endtime = 1d;\nCommonSecurityLog\n| where TimeGenerated >= ago(endtime) \n| where DeviceVendor =~ \"Cisco\"\n| where DeviceAction =~ \"denied\"\n| extend SourceIPType = iff(SourceIP matches regex PrivateIPregex,\"private\" ,\"public\" )\n| where SourceIPType == \"public\"\n| summarize count() by SourceIP\n| join (\n    // Successful signins from IPs blocked by the firewall solution are suspect\n    // Include fully successful sign-ins, but also ones that failed only at MFA stage\n    // as that supposes the password was sucessfully guessed.\n  SigninLogs\n  | where ResultType in (\"0\", \"50574\", \"50576\") \n) on $left.SourceIP == $right.IPAddress\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIP, AccountCustomEntity = UserPrincipalName",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "tactics": [
                    "InitialAccess"
                ],
                "alertRuleTemplateName": "157c0cfc-d76d-463b-8755-c781608cdc1a",
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": null
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/aec5afa8-963c-4591-ba95-11a7a6152536')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/aec5afa8-963c-4591-ba95-11a7a6152536')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "ClearLogTraceIOT-CustomGBBAnalytic",
                "description": "Attacker clears all log traces associated with PLC compromise.",
                "severity": "Medium",
                "enabled": true,
                "query": "CommonSecurityLog\n| where Computer == \"IoTCEFAttack\"\n| where Activity == \"1102 - The audit log was cleared\" or Activity == \"4729 - A member was removed from a security-enabled global group\" or Activity == \"4726 - A user account was deleted.\"\n| project TimeGenerated, DestinationIP, Activity, DestinationDnsDomain, DestinationHostName, DestinationUserPrivileges, DestinationUserName, SourceUserName, Computer\n| sort by TimeGenerated asc\n",
                "queryFrequency": "P7D",
                "queryPeriod": "P7D",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "tactics": [
                    "DefenseEvasion"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": [
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "HostName",
                                "columnName": "Computer"
                            }
                        ]
                    },
                    {
                        "entityType": "Process",
                        "fieldMappings": [
                            {
                                "identifier": "ProcessId",
                                "columnName": "Activity"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/6858cc6d-8cab-4710-8f55-ad3c1eeee84f/actions/97a6820c101a45d5b24867a463d0226d')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/6858cc6d-8cab-4710-8f55-ad3c1eeee84f/97a6820c101a45d5b24867a463d0226d')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules/actions",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "ruleId": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/6858cc6d-8cab-4710-8f55-ad3c1eeee84f')]",
                "triggerUri": "[listCallbackURL(concat('/subscriptions/f304d959-c8d3-4e48-bb37-89e4b4144bad/resourceGroups/RG-AbrarHNet-Monitor/providers/Microsoft.Logic/workflows/Sentinel-PB-02-Alert','/triggers/When_a_response_to_an_Azure_Sentinel_alert_is_triggered'),'2016-06-01').value]",
                "logicAppResourceId": "/subscriptions/f304d959-c8d3-4e48-bb37-89e4b4144bad/resourceGroups/RG-AbrarHNet-Monitor/providers/Microsoft.Logic/workflows/Sentinel-PB-02-Alert",
                "operatesOn": "Alert"
            },
            "dependsOn": [
                "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/6858cc6d-8cab-4710-8f55-ad3c1eeee84f')]"
            ]
        },
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/e05fec26-5f5d-4ec3-99b6-080d1086e817/actions/c078b0279b3d47d097c597bfc36bcb05')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/e05fec26-5f5d-4ec3-99b6-080d1086e817/c078b0279b3d47d097c597bfc36bcb05')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules/actions",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "ruleId": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/e05fec26-5f5d-4ec3-99b6-080d1086e817')]",
                "triggerUri": "[listCallbackURL(concat('/subscriptions/d1d8779d-38d7-4f06-91db-9cbc8de0176f/resourceGroups/SOC/providers/Microsoft.Logic/workflows/Recent-IP-Passive-DNS','/triggers/When_a_response_to_an_Azure_Sentinel_alert_is_triggered'),'2016-06-01').value]",
                "logicAppResourceId": "/subscriptions/d1d8779d-38d7-4f06-91db-9cbc8de0176f/resourceGroups/SOC/providers/Microsoft.Logic/workflows/Recent-IP-Passive-DNS",
                "operatesOn": "Alert"
            },
            "dependsOn": [
                "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/e05fec26-5f5d-4ec3-99b6-080d1086e817')]"
            ]
        }
    ]
}
